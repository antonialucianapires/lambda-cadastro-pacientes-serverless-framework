service: cadastro-pacientes
frameworkVersion: '3'

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x

  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource: arn:aws:dynamodb:us-east-1:681048862290:table/PACIENTES

functions:
  listarPacientes:
    handler: handler.listarPacientes
    events:
      - http:
          path: pacientes
          method: get
          cors: true
  
  obterPaciente:
    handler: handler.obterPaciente
    events:
      - http:
          path: /pacientes/{pacienteId}
          method: get
          cors: true

  cadastrarPaciente:
    handler: handler.cadastrarPaciente
    events:
      - http:
          path: /pacientes
          method: post
          cors: true
  
  atualizarPaciente:
    handler: handler.atualizarPaciente
    events:
      - http:
          path: /pacientes/{pacienteId}
          method: put
          cors: true

  deletarPaciente:
    handler: handler.deletarPaciente
    events:
      - http:
          path: /pacientes/{pacienteId}
          method: delete
          cors: true

resources:
  Resources:
    PacientesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PACIENTES
        AttributeDefinitions:
          - AttributeName: paciente_id
            AttributeType: S
        KeySchema:
          - AttributeName: paciente_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1